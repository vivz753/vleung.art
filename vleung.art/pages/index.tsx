import type { NextPage } from 'next'
import Head from 'next/head'
import { FC, useState, forwardRef } from 'react'
import clsx from 'clsx'

const Home: NextPage = () => {
  const [imageUrl, setImageUrl] = useState('')
  const [showModal, setShowModal] = useState(false)
  const title = `Vivian's Shoppe`;

  const images = [
    '/images/art/froggy.jpg',
    '/images/art/BabyMonkeyPostcard.PNG',
    '/images/art/UtahComic.PNG',
    '/images/art/VintageRayCommission.jpg',
    '/images/art/ravenxstarfire.JPG',
    '/images/art/skull.jpg',
]

const onNext = (): void => {
  const currIndex = images.findIndex((i) => i === imageUrl)
  const nextIndex = currIndex < images.length - 1 ? currIndex + 1 : 0
  console.log('setting indx to:', nextIndex)
  setImageUrl(() => images[nextIndex])
}
const onPrev = (): void => {
  const currIndex = images.findIndex((i) => i === imageUrl)
  const prevIndex = currIndex > 0 ? currIndex - 1 : images.length - 1
  console.log('setting indx to:', prevIndex)
  setImageUrl(() => images[prevIndex])
}

  return (
    <div className="h-full flex flex-col items-center justify-center gap-5 p-20">
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/rainbows/rainbow-blue-svgrepo-com.svg" />
      </Head>
      <div className="flex flex-wrap gap-10 w-full justify-center">
          {images.map((image, i) => (
            <Thumbnail src={image} key={i}
              onClick={() => {
                setImageUrl(image)
                setShowModal(true)
            }}
            />
          ))}
          </div>
          {/* <div className="absolute w-screen h-screen"> */}

        <Modal
          show={showModal}
          onClose={() => setShowModal(false)}
          imageUrl={imageUrl}
          onNext={onNext}
          onPrev={onPrev}
        >
          <>
          </>
        </Modal>
          {/* </div> */}

    </div>
  )
}

export default Home

interface ModalProps {
  show: boolean
  onClose: () => void
  onPrev: () => void
  onNext: () => void
  imageUrl: string
  children: JSX.Element
}

const Modal= forwardRef<HTMLDivElement, ModalProps>( ({ show, onClose, onPrev, onNext, children, imageUrl }, ref) => {
  return (
    <div className={clsx("fixed top-0 w-screen h-screen justify-center", show ? 'flex' : 'hidden')}>
      <div className="w-full h-full relative justify-center flex">
      <div onClick={() => {console.log('clicked'); onClose()}} className="absolute h-full w-full bg-black opacity-70" />
      {/* <div  ref={ref} className="absolute bg-white rounded-xl inset-14 m-10 bg-contain bg-no-repeat bg-center"  style={{backgroundImage: `url(${imageUrl})`}}>
        {children}
      </div> */}
      <div className="flex flex-col h-full border relative justify-center items-center">
      <button  onClick={onClose} className="shrink-0 absolute top-12 rounded-xl -mt-5 min-w-max p-2 w-8 h-8 bg-black justify-center flex items-center">
        <span className="cursor-pointer w-full text-white">X close</span>
      </button>
        <div className="flex flex-row h-full items-center">

      <button  onClick={onPrev} className="shrink-0 bottom-20 lg:bottom-auto absolute left-0 rounded-xl m-1 min-w-max p-2 w-8 h-8 bg-black justify-center flex items-center">
        <span className="cursor-pointer w-full text-white">{`< prev`}</span>
      </button>
        <img src={imageUrl} className="w-full lg:w-auto lg:h-full lg:p-10 py-5" />
      <button  onClick={onNext} className="shrink-0 bottom-20 lg:bottom-auto absolute right-0 rounded-xl m-1 min-w-max p-2 w-8 h-8 bg-black justify-center flex items-center">
        <span className="cursor-pointer w-full text-white">{`next >`}</span>
      </button>
        </div>
      </div>
    </div>
    </div>
  )
}
)

Modal.displayName = 'Modal'

const Thumbnail: FC<{onClick: () => void; src: string}> = ({ onClick, src }) => {
  return (
    <img
      alt="thumbnail"
      onClick={onClick}
      className="transform hover:scale-125 transition ease-in-out duration-150 cursor-pointer rounded-lg contrast-125 filter"
      height="200"
      width="400"
      src={src}
    />
  )
}
